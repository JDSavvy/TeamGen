name: iOS CI (Simplified)

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  SCHEME: TeamGen
  PROJECT: TeamGen.xcodeproj
  DESTINATION: 'platform=iOS Simulator,name=iPhone 16 Pro'

jobs:
  # Quick validation build
  validate:
    name: Quick Validation
    runs-on: macos-14
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.0'
        
    - name: Show Environment
      run: |
        xcodebuild -version
        xcrun simctl list devices available | grep "iPhone 16 Pro" || echo "iPhone 16 Pro not available"
        
    - name: Install SwiftLint
      run: brew install swiftlint
        
    - name: Run SwiftLint
      run: swiftlint lint --reporter github-actions-logging
      continue-on-error: true
      
    - name: Build Only (Debug)
      run: |
        xcodebuild build \
          -project ${{ env.PROJECT }} \
          -scheme ${{ env.SCHEME }} \
          -destination "${{ env.DESTINATION }}" \
          -configuration Debug \
          CODE_SIGNING_ALLOWED=NO \
          -quiet
          
    - name: Run Basic Tests
      run: |
        xcodebuild test \
          -project ${{ env.PROJECT }} \
          -scheme ${{ env.SCHEME }} \
          -destination "${{ env.DESTINATION }}" \
          -configuration Debug \
          CODE_SIGNING_ALLOWED=NO \
          -only-testing:TeamGenTests \
          -quiet
      continue-on-error: true

  # Full CI only on main branch
  full-ci:
    name: Full CI Pipeline
    runs-on: macos-14
    needs: validate
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.0'
        
    - name: Install Tools
      run: |
        brew install swiftlint swiftformat
        
    - name: Code Quality
      run: |
        swiftlint lint --reporter github-actions-logging
        swiftformat --lint .
      continue-on-error: true
        
    - name: Build and Test with Coverage
      run: |
        xcodebuild test \
          -project ${{ env.PROJECT }} \
          -scheme ${{ env.SCHEME }} \
          -destination "${{ env.DESTINATION }}" \
          -configuration Debug \
          -enableCodeCoverage YES \
          -resultBundlePath TestResults.xcresult \
          CODE_SIGNING_ALLOWED=NO \
          -quiet
          
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: TestResults.xcresult

# Workflow concurrency settings
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true